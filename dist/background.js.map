{"version":3,"file":"background.js","sources":["../sidebar/db/constants.ts","../sidebar/db/utils.ts","../background/index.ts"],"sourcesContent":["export const DB_NAME = 'contexts_db';\nexport const DB_VERSION = 1;\n","import { ContextItem } from '../models/context.model';\nimport { DB_NAME, DB_VERSION } from './constants';\n\nconst openDatabase = () => {\n    return new Promise<IDBDatabase>((resolve, reject) => {\n        const request = indexedDB.open(DB_NAME, DB_VERSION);\n\n        request.onupgradeneeded = (event: any) => {\n            const db = event.target.result;\n            if (!db.objectStoreNames.contains('contexts')) {\n                const objectStore = db.createObjectStore('contexts', {\n                    keyPath: 'id',\n                    autoIncrement: true,\n                });\n                objectStore.createIndex('title', 'title', { unique: false });\n                objectStore.createIndex('description', 'description', {\n                    unique: false,\n                });\n            }\n        };\n\n        request.onsuccess = (event: any) => resolve(event.target.result);\n        request.onerror = () => reject(new Error('Error opening IndexedDB'));\n    });\n};\n\nconst addNewContextToDB = async (context: ContextItem) => {\n    try {\n        const db = await openDatabase(),\n            transaction = db.transaction('contexts', 'readwrite'),\n            objectStore = transaction.objectStore('contexts'),\n            request = objectStore.add(context);\n\n        return new Promise<void>((resolve, reject) => {\n            request.onsuccess = () => resolve();\n            request.onerror = () => reject(new Error('Error adding context'));\n        });\n    } catch (error) {\n        console.log('Error opening IndexedDB', error);\n        throw new Error('Error opening IndexedDB');\n    }\n};\n\nconst getAllContextsFromDB = async () => {\n    try {\n        const db = await openDatabase(),\n            transaction = db.transaction('contexts', 'readonly'),\n            objectStore = transaction.objectStore('contexts'),\n            request = objectStore.getAll();\n\n        return new Promise<ContextItem[]>((resolve, reject) => {\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () =>\n                reject(new Error('Error fetching contexts'));\n        });\n    } catch (error) {\n        console.log('Error opening IndexedDB', error);\n        throw new Error('Error opening IndexedDB');\n    }\n};\n\nconst updateContextInDB = async (updatedContext: ContextItem) => {\n    try {\n        const db = await openDatabase(),\n            transaction = db.transaction('contexts', 'readwrite'),\n            objectStore = transaction.objectStore('contexts'),\n            request = objectStore.put(updatedContext);\n\n        return new Promise<void>((resolve, reject) => {\n            request.onsuccess = () => resolve();\n            request.onerror = () => reject(new Error('Error updating context'));\n        });\n    } catch (error) {\n        console.log('Error opening IndexedDB', error);\n        throw new Error('Error opening IndexedDB');\n    }\n};\n\nconst deleteContextFromDB = async (contextId: number) => {\n    try {\n        const db = await openDatabase(),\n            transaction = db.transaction('contexts', 'readwrite'),\n            objectStore = transaction.objectStore('contexts'),\n            request = objectStore.delete(contextId);\n\n        return new Promise<void>((resolve, reject) => {\n            request.onsuccess = () => resolve();\n            request.onerror = () => reject(new Error('Error deleting context'));\n        });\n    } catch (error) {\n        console.log('Error opening IndexedDB', error);\n        throw new Error('Error opening IndexedDB');\n    }\n};\n\nexport {\n    addNewContextToDB,\n    deleteContextFromDB,\n    getAllContextsFromDB,\n    updateContextInDB,\n};\n","import { getAllContextsFromDB } from '../sidebar/db/utils';\n\nlet contentType = 'contexts',\n    scrappedPageData = {\n        title: '',\n        description: '',\n    },\n    isSidePanelOpen = false;\n\n// Create the context menu item when the extension is installed\nchrome.runtime.onInstalled.addListener(() => {\n    chrome.contextMenus.create({\n        id: 'addToAutoAct',\n        title: 'Add to AutoAct',\n        contexts: ['selection']\n    });\n});\n\n// Handle context menu click\nchrome.contextMenus.onClicked.addListener((info, tab) => {\n    if (info.menuItemId === 'addToAutoAct' && info.selectionText) {\n        // Get the selected text and page title\n        const selectedText = info.selectionText;\n        \n        // Get the tab title for the current tab\n        chrome.tabs.get(tab?.id || 0, (currentTab) => {\n            const pageTitle = currentTab.title || '';\n            \n            // Create the page data object\n            const pageData = {\n                title: pageTitle,\n                description: selectedText\n            };\n            \n            // Save the selected data\n            scrappedPageData = pageData;\n            \n            // Notify that new data is available\n            chrome.runtime.sendMessage({ action: 'updatePageData' });\n            \n            // Open the sidebar with the addNewContext view\n            if (tab?.id) {\n                contentType = 'addNewContext';\n                isSidePanelOpen = true;\n                \n                chrome.runtime.sendMessage({\n                    action: 'updateSidebarContentType',\n                    contentType,\n                });\n                \n                chrome.sidePanel.setOptions({ enabled: true });\n                chrome.sidePanel.open({\n                    windowId: tab.windowId,\n                    tabId: tab.id\n                });\n            }\n        });\n    }\n});\n\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    if (message.action === 'openSidePanel') {\n        contentType = message.contentType;\n        isSidePanelOpen = true;\n\n        if (message.notifySidePanel) {\n            chrome.runtime.sendMessage({\n                action: 'updateSidebarContentType',\n                contentType,\n            });\n        }\n\n        chrome.sidePanel.setOptions({ enabled: true });\n        chrome.sidePanel.open({\n            windowId: sender.tab?.windowId || 0,\n            tabId: sender.tab?.id,\n        });\n    }\n\n    if (message.action === 'closeSidePanel') {\n        isSidePanelOpen = false;\n        chrome.sidePanel.setOptions({ enabled: false });\n    }\n\n    if (message.action === 'getSidebarState') {\n        sendResponse({ contentType, isSidePanelOpen });\n    }\n\n    if (message.action === 'scrappedPageData') {\n        scrappedPageData = message.pageData;\n        chrome.runtime.sendMessage({ action: 'updatePageData' });\n    }\n\n    if (message.action === 'getPageData') {\n        sendResponse({ pageData: scrappedPageData });\n    }\n\n    if (message.action === 'captureIframeContent') {\n        // Handle cross-origin iframe content capture\n        const iframeSrc = message.iframeSrc;\n        if (!iframeSrc) {\n            sendResponse({ html: '' });\n            return;\n        }\n\n        // Execute a content script in the iframe to capture its HTML\n        // This requires \"all_frames\": true in manifest.json content scripts\n        try {\n            chrome.tabs.executeScript(\n                sender.tab?.id || 0,\n                {\n                    code: `\n                        Array.from(document.querySelectorAll('iframe'))\n                            .filter(iframe => iframe.src === \"${iframeSrc}\")\n                            .map(iframe => {\n                                try {\n                                    return iframe.contentDocument?.documentElement.outerHTML || '';\n                                } catch (e) {\n                                    return '';\n                                }\n                            })[0] || '';\n                    `,\n                    allFrames: true\n                },\n                (results) => {\n                    // If we got a result, send it back\n                    if (results && results.length > 0) {\n                        sendResponse({ html: results[0] || '' });\n                    } else {\n                        sendResponse({ html: '' });\n                    }\n                }\n            );\n            return true; // Keep the message channel open for the async response\n        } catch (error) {\n            console.error('Error executing script in iframe:', error);\n            sendResponse({ html: '' });\n        }\n    }\n\n    if (message.action === 'getContexts') {\n        (async () => {\n            try {\n                const contexts = await getAllContextsFromDB();\n                sendResponse({ data: contexts, error: null });\n            } catch (error) {\n                console.error('Error getting contexts from DB', error);\n                sendResponse({\n                    data: [],\n                    error: 'Error getting contexts from DB',\n                });\n            }\n        })();\n\n        return true;\n    }\n\n    if (message.action === 'informModalToRefetchContexts') {\n        chrome.tabs.query({}, (tabs) => {\n            tabs.forEach((tab) => {\n                chrome.tabs.sendMessage(tab.id || 0, {\n                    action: 'refetchContexts',\n                });\n            });\n        });\n    }\n});\n"],"names":["DB_NAME","DB_VERSION","openDatabase","Promise","resolve","reject","request","indexedDB","open","onupgradeneeded","event","db","target","result","objectStoreNames","contains","objectStore","createObjectStore","keyPath","autoIncrement","createIndex","unique","onsuccess","onerror","Error","getAllContextsFromDB","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","transaction","wrap","_callee2$","_context2","prev","next","sent","getAll","abrupt","t0","console","log","stop","apply","arguments","contentType","scrappedPageData","title","description","isSidePanelOpen","chrome","runtime","onInstalled","addListener","contextMenus","create","id","contexts","onClicked","info","tab","menuItemId","selectionText","selectedText","tabs","get","currentTab","pageTitle","pageData","sendMessage","action","sidePanel","setOptions","enabled","windowId","tabId","onMessage","message","sender","sendResponse","_sender$tab","_sender$tab2","notifySidePanel","iframeSrc","html","_sender$tab3","executeScript","code","concat","allFrames","results","length","error","_callee","_callee$","_context","data","query","forEach"],"mappings":"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"}